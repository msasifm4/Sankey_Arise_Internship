create database milestone1;
use milestone1;
CREATE TABLE Patient(
    PatientID INT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    PinCode VARCHAR(10) NOT NULL,
    Age INT NOT NULL,
    Gender VARCHAR(1) NOT NULL,
    Phone VARCHAR(10) NOT NULL,
    CONSTRAINT CheckAge CHECK (Age < 110)
);
-- Inserting sample data into the Patient table
INSERT INTO Patient (PatientID, FirstName, LastName, Address, PinCode, Age, Gender, Phone)
VALUES
    (1, 'John', 'Doe', '123 Main St', '123456', 30, 'M', '1234567890'),
    (2, 'Jane', 'Smith', '456 Elm St', '789012', 25, 'F', '9876543210'),
    (3, 'Michael', 'Johnson', '789 Oak St', '345678', 40, 'M', '5678901234'),
    (4, 'Emily', 'Williams', '321 Pine St', '901234', 35, 'F', '4567890123'),
    (5, 'David', 'Brown', '654 Maple St', '567890', 28, 'M', '7890123456');
-- Inserting more sample data into the Patient table
INSERT INTO Patient (PatientID, FirstName, LastName, Address, PinCode, Age, Gender, Phone)
VALUES
    (6, 'Sarah', 'Taylor', '987 Cedar St', '234567', 22, 'F', '9012345678'),
    (7, 'Christopher', 'Lee', '741 Birch St', '890123', 45, 'M', '6789012345'),
    (8, 'Amanda', 'Clark', '369 Walnut St', '456789', 33, 'F', '3456789012'),
    (9, 'James', 'Martinez', '852 Cherry St', '012345', 29, 'M', '2345678901'),
    (10, 'Jessica', 'Garcia', '159 Poplar St', '678901', 27, 'F', '8901234567');
    
 CREATE TABLE Doctors (
    emp_id INT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    position VARCHAR(50) NOT NULL,
    speciality VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(10) NOT NULL,
    experience_years INT NOT NULL,
    joining_date DATE NOT NULL
);
INSERT INTO Doctors (emp_id, first_name, last_name, position, speciality, email, phone_number, experience_years, joining_date)
VALUES
    (1, 'Mohammed', 'Asif', 'Senior Physician', 'Cardiology', 'mohammed.asif@example.com', '1234567890', 5, '2020-03-15'),
    (2, 'John', 'Doe', 'Consultant', 'Orthopedics', 'john.doe@example.com', '2345678901', 8, '2017-09-28'),
    (3, 'Jane', 'Smith', 'Surgeon', 'General Surgery', 'jane.smith@example.com', '3456789012', 10, '2015-06-10'),
    (4, 'Michael', 'Johnson', 'Pediatrician', 'Pediatrics', 'michael.johnson@example.com', '4567890123', 6, '2019-11-20'),
    (5, 'Emily', 'Williams', 'Dermatologist', 'Dermatology', 'emily.williams@example.com', '5678901234', 7, '2018-04-05'),
    (6, 'David', 'Brown', 'Ophthalmologist', 'Ophthalmology', 'david.brown@example.com', '6789012345', 9, '2016-08-12'),
    (7, 'Sarah', 'Taylor', 'Psychiatrist', 'Psychiatry', 'sarah.taylor@example.com', '7890123456', 4, '2021-02-18'),
    (8, 'Christopher', 'Lee', 'Neurologist', 'Neurology', 'christopher.lee@example.com', '8901234567', 11, '2014-10-30'),
    (9, 'Amanda', 'Clark', 'Gynecologist', 'Obstetrics & Gynecology', 'amanda.clark@example.com', '9012345678', 8, '2017-07-25'),
    (10, 'James', 'Martinez', 'ENT Specialist', 'Otorhinolaryngology', 'james.martinez@example.com', '0123456789', 12, '2013-05-14');

-- Create the Department table with the modifications
CREATE TABLE Department (
    d_id INT PRIMARY KEY,
    department_name VARCHAR(50) NOT NULL,
    head INT NOT NULL,
    FOREIGN KEY (head) REFERENCES Doctors(emp_id)
);
-- Inserting data into the Department table
INSERT INTO Department (d_id, department_name, head)
VALUES
    (1, 'Cardiology Department', 1),
    (2, 'Orthopedics Department', 2),
    (3, 'Surgery Department', 3),
    (4, 'Pediatrics Department', 4),
    (5, 'Dermatology Department', 5),
    (6, 'Ophthalmology Department', 6),
    (7, 'Psychiatry Department', 7),
    (8, 'Neurology Department', 8),
    (9, 'Obstetrics & Gynecology Department', 9),
    (10, 'ENT Department', 10);
CREATE TABLE affiliated_with (
    doctor INT PRIMARY KEY,
    department INT not null,
    FOREIGN KEY (doctor) REFERENCES Doctors(emp_id),
    FOREIGN KEY (department) REFERENCES Department(d_id)
);

CREATE TABLE Medication (
    m_id INT PRIMARY KEY,
    name VARCHAR(80) NOT NULL,
    brand VARCHAR(80) NOT NULL,
    description VARCHAR(255) NOT NULL,
    cost DECIMAL(10, 2) NOT NULL
);

INSERT INTO Medication (m_id, name, brand, description, cost)
VALUES
    (1, 'Paracetamol', 'Panadol', 'Pain reliever and fever reducer', 449.00),
    (2, 'Ibuprofen', 'Advil', 'Nonsteroidal anti-inflammatory drug (NSAID)', 559.00),
    (3, 'Amoxicillin', 'Amoxil', 'Antibiotic used to treat bacterial infections', 699.00),
    (4, 'Lisinopril', 'Prinivil', 'Angiotensin-converting enzyme (ACE) inhibitor used for high blood pressure', 899.00),
    (5, 'Atorvastatin', 'Lipitor', 'Statins used to lower cholesterol levels', 1199.00),
	(6, 'Omeprazole', 'Prilosec', 'Proton pump inhibitor used to treat gastroesophageal reflux disease (GERD)', 675.00),
    (7, 'Metformin', 'Glucophage', 'Oral diabetes medication used to control blood sugar levels', 485.00),
    (8, 'Levothyroxine', 'Synthroid', 'Thyroid hormone replacement used to treat hypothyroidism', 820.00),
    (9, 'Albuterol', 'Proventil', 'Bronchodilator used to treat asthma and chronic obstructive pulmonary disease (COPD)', 575.00),
    (10, 'Warfarin', 'Coumadin', 'Anticoagulant used to prevent blood clots', 985.00);

CREATE TABLE Prescribe (
    PatientID INT NOT NULL,
    dr_id INT NOT NULL,
    m_id INT NOT NULL,
    date TIMESTAMP NOT NULL,
    dosage VARCHAR(50) NOT NULL,
    PRIMARY KEY (PatientID),
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (dr_id) REFERENCES Doctors(emp_id),
    FOREIGN KEY (m_id) REFERENCES Medication(m_id)
);
ALTER TABLE Prescribe
ADD cost DECIMAL(10, 2) NOT NULL;


INSERT INTO Prescribe (PatientID, dr_id, m_id, date, dosage, cost)
VALUES
    (1, 1, 1, '2024-01-31 08:00:00', '1 tablet twice daily', 449.00), 
    (2, 2, 2, '2024-01-31 09:30:00', '1 capsule daily', 559.00),    
    (3, 3, 3, '2024-01-31 11:00:00', '500mg three times a day', 699.00), 
    (4, 4, 4, '2024-01-31 13:00:00', '10mg once daily', 899.00),  
    (5, 5, 5, '2024-01-31 15:00:00', '20mg once at bedtime', 1199.00); 

    
INSERT INTO Prescribe (PatientID, dr_id, m_id, date, dosage)
VALUES
    (6, 6, 6, '2024-01-31 16:30:00', '1 tablet twice daily'),
    (7, 7, 7, '2024-01-31 18:00:00', '1 tablet once daily'),
    (8, 8, 8, '2024-01-31 20:00:00', '1 capsule daily'),
    (9, 9, 9, '2024-01-31 10:00:00', '1 tablet three times a day'),
    (10, 10, 10, '2024-01-31 12:00:00', '1 tablet once daily');
    
INSERT INTO Prescribe (PatientID, dr_id, m_id, date, dosage, cost)
VALUES
    (6, 6, 6, '2024-01-31 16:30:00', '1 tablet twice daily', 675.00), 
    (7, 7, 7, '2024-01-31 18:00:00', '1 tablet once daily', 485.00), 
    (8, 8, 8, '2024-01-31 20:00:00', '1 capsule daily', 820.00),    
    (9, 9, 9, '2024-01-31 10:00:00', '1 tablet three times a day', 575.00), 
    (10, 10, 10, '2024-01-31 12:00:00', '1 tablet once daily', 985.00); 



CREATE TABLE Treatment (
    code INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    cost DECIMAL(10, 2) NOT NULL CHECK (cost >= 0),
    description VARCHAR(255) NOT NULL,
    duration INT NOT NULL
);

INSERT INTO Treatment (code, name, cost, description, duration)
VALUES
    (1, 'Physical Therapy', 3500.00, 'Rehabilitation exercises', 60),
    (2, 'X-Ray', 2100.00, 'Diagnostic imaging technique', 15),
    (3, 'Blood Test', 1050.00, 'Laboratory analysis of blood sample', 30),
    (4, 'MRI Scan', 10500.00, 'Magnetic Resonance Imaging scan', 45),
    (5, 'Dental Cleaning', 1400.00, 'Routine dental cleaning', 30),
    (6, 'Ultrasound', 2800.00, 'Diagnostic imaging technique using sound waves', 20),
    (7, 'Counseling Session', 7000.00, 'Therapeutic counseling session', 60),
    (8, 'Physician Consultation', 1750.00, 'Consultation with a physician', 15),
    (9, 'Medication Review', 525.00, 'Review of medication regimen', 30),
    (10, 'Surgery', 35000.00, 'Surgical procedure', 120);
    
    CREATE TABLE Nurse (
    emp_id INT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    position VARCHAR(50) NOT NULL,
   
    department VARCHAR(50) NOT NULL,
    shift VARCHAR(20) NOT NULL
    );
INSERT INTO Nurse (emp_id, first_name, last_name, position, department, shift)
VALUES
    (1, 'Emily', 'Smith', 'Registered Nurse', 'Emergency Department', 'Morning'),
    (2, 'Michael', 'Johnson', 'Nurse Practitioner', 'ICU', 'Night'),
    (3, 'Jennifer', 'Williams', 'Licensed Practical Nurse', 'Pediatrics', 'Evening'),
    (4, 'Christopher', 'Brown', 'Nurse Manager', 'Surgery', 'Morning'),
    (5, 'Jessica', 'Jones', 'Clinical Nurse Specialist', 'Cardiology', 'Night'),
    (6, 'David', 'Miller', 'Staff Nurse', 'Orthopedics', 'Evening'),
    (7, 'Ashley', 'Davis', 'Nurse Educator', 'Oncology', 'Morning'),
    (8, 'Daniel', 'Wilson', 'Charge Nurse', 'Labor and Delivery', 'Night'),
    (9, 'Sarah', 'Martinez', 'Operating Room Nurse', 'Anesthesiology', 'Evening'),
    (10, 'James', 'Taylor', 'Pediatric Nurse', 'Neurology', 'Morning');

CREATE TABLE Bed (
    bed_no INT PRIMARY KEY,
    bed_type VARCHAR(50) NOT NULL,
    ward VARCHAR(50) NOT NULL,
    floor INT NOT NULL,
    
    availability VARCHAR(10) NOT NULL
    
);
INSERT INTO Bed (bed_no, bed_type, ward, floor, availability)
VALUES
    (101, 'Curative (Acute) Care', 'General Ward', 1, 'Available'),
    (102, 'Critical Care', 'ICU', 2, 'Occupied'),
    (103, 'Long-term Care', 'Maternity Ward', 3, 'Available'),
    (104, 'Curative (Acute) Care', 'Pediatrics Ward', 1, 'Occupied'),
    (105, 'Curative (Acute) Care', 'General Ward', 2, 'Available'),
    (106, 'Adjustable Hospital', 'Surgery Ward', 4, 'Available'),
    (107, 'Critical Care', 'ICU', 3, 'Occupied'),
    (108, 'Specialty Hospital', 'Emergency Ward', 1, 'Available'),
    (109, 'Long-term Care', 'Maternity Ward', 2, 'Occupied'),
    (110, 'Rehabilitative Care', 'Pediatrics Ward', 3, 'Available');
    
    CREATE TABLE Stay (
    stay_id INT PRIMARY KEY,
    PatientID INT NOT NULL,
    bed_no INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (bed_no) REFERENCES Bed(bed_no)
);
INSERT INTO Stay (stay_id, PatientID, bed_no, start_time, end_time)
VALUES
    (1, 1, 101, '2024-01-31 08:00:00', '2024-01-31 12:00:00'),
    (2, 2, 102, '2024-01-31 09:30:00', '2024-01-31 15:00:00'),
    (3, 3, 103, '2024-01-31 11:00:00', '2024-01-31 18:00:00'),
    (4, 4, 104, '2024-01-31 13:00:00', '2024-01-31 20:00:00'),
    (5, 5, 105, '2024-01-31 15:00:00', '2024-01-31 22:00:00'),
    (6, 6, 106, '2024-01-31 16:30:00', '2024-02-01 08:00:00'),
    (7, 7, 107, '2024-01-31 18:00:00', '2024-02-01 12:00:00'),
    (8, 8, 108, '2024-01-31 20:00:00', '2024-02-01 14:00:00'),
    (9, 9, 109, '2024-02-01 10:00:00', '2024-02-02 08:00:00'),
    (10, 10, 110, '2024-02-01 12:00:00', '2024-02-02 10:00:00');

CREATE TABLE undergoes_Treatment (
    PatientID INT PRIMARY KEY,
    T_Code INT NOT NULL,
    stay_id INT NOT NULL,
    dr_id INT NOT NULL,
    nurse_id INT NOT NULL,
    date DATE NOT NULL,
    outcome VARCHAR(255) NOT NULL,
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (T_Code) REFERENCES Treatment(code),
    FOREIGN KEY (stay_id) REFERENCES Stay(stay_id),
    FOREIGN KEY (dr_id) REFERENCES Doctors(emp_id),
    FOREIGN KEY (nurse_id) REFERENCES Nurse(emp_id)
);
INSERT INTO undergoes_Treatment (PatientID, T_Code, stay_id, dr_id, nurse_id, date, outcome)
VALUES
    (1, 1, 1, 1, 1, '2024-01-31', 'Recovered'),
    (2, 2, 2, 2, 2, '2024-01-31', 'Improved'),
    (3, 3, 3, 3, 3, '2024-01-31', 'Stable'),
    (4, 4, 4, 4, 4, '2024-01-31', 'Recovered'),
    (5, 5, 5, 5, 5, '2024-01-31', 'Improved'),
    (6, 6, 6, 6, 6, '2024-01-31', 'Stable'),
    (7, 7, 7, 7, 7, '2024-01-31', 'Recovered'),
    (8, 8, 8, 8, 8, '2024-01-31', 'Improved'),
    (9, 9, 9, 9, 9, '2024-01-31', 'Stable'),
    (10, 10, 10, 10, 10, '2024-01-31', 'Recovered');
CREATE TABLE insurance (
    id INT PRIMARY KEY,
    limit1 DECIMAL(10, 2) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    provider VARCHAR(100) NOT NULL
);

INSERT INTO insurance (id, limit1, start_date, end_date, provider)
VALUES
    (1, 50000.00, '2023-01-01', '2024-01-01', 'ABC Insurance Company'),
    (2, 75000.00, '2023-02-01', '2024-02-01', 'XYZ Insurance Services'),
    (3, 100000.00, '2023-03-01', '2024-03-01', 'PQR Health Insurance india'),
    (4, 60000.00, '2023-04-01', '2024-04-01', 'LMN Healthcare Coverage'),
    (5, 80000.00, '2023-05-01', '2024-05-01', 'DEF Insurance Solutions'),
    (6, 90000.00, '2023-06-01', '2024-06-01', 'GHI Assurance Company'),
    (7, 120000.00, '2023-07-01', '2024-07-01', 'JKL Medical Insurance'),
    (8, 65000.00, '2023-08-01', '2024-08-01', 'MNO Health Plans'),
    (9, 110000.00, '2023-09-01', '2024-09-01', 'RST Healthcare Services'),
    (10, 95000.00, '2023-10-01', '2024-10-01', 'UVW Insurance Group');
    
ALTER TABLE Patient
ADD CONSTRAINT fk_insurance_id
    FOREIGN KEY (insurance_id) REFERENCES insurance(id);
ALTER TABLE Patient
MODIFY COLUMN insurance_id INT NOT NULL;
select * from patient;

UPDATE Patient
SET insurance_id = 9
WHERE PatientID = 9;

ALTER TABLE Patient
MODIFY COLUMN insurance_id INT NOT NULL;


select * from Treatment;
CREATE INDEX idx_code ON Treatment(code);
select * from insurance;
select * from patient;
select * from doctors;
select * from department;
select * from affiliated_with;
select * from prescribe;
select * from medication;
select * from treatment;
select * from bed;
select * from nurse;
select * from stay;
select * from undergoes_treatment;

CREATE TABLE PatientDiagnosis (
    DiagnosisID INT PRIMARY KEY AUTO_INCREMENT,
    PatientID INT,
    dr_id int,
    Diagnosis VARCHAR(255) NOT NULL,
    DiagnosisDate DATE NOT NULL,
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (dr_id) REFERENCES doctors(emp_id)
);

INSERT INTO PatientDiagnosis (PatientID, dr_id, Diagnosis, DiagnosisDate)
VALUES
    (1, 1, 'Fever', '2023-01-15'),
    (2, 2, 'Headache', '2023-02-10'),
    (3, 3, 'Flu', '2023-03-05'),
    (4, 4, 'Allergies', '2023-04-20'),
    (5, 5, 'Sprained Ankle', '2023-05-12');
    
INSERT INTO PatientDiagnosis (PatientID, dr_id, Diagnosis, DiagnosisDate)
VALUES
    (1, 1, 'Common Cold', '2023-06-30'),
    (2, 2, 'Migraine', '2023-09-14'),
    (3, 3, 'Stomachache', '2023-07-18'),
    (4, 4, 'Sinusitis', '2023-08-25'),
    (5, 5, 'Fractured Arm', '2023-10-05'),
    (1, 6, 'Influenza', '2023-11-20'),
    (2, 7, 'Ear Infection', '2023-12-15'),
    (3, 8, 'Gastritis', '2024-01-10'),
    (4, 9, 'Bronchitis', '2024-02-05'),
    (5, 10, 'Sprained Wrist', '2024-03-02');

select * from PatientDiagnosis;

ALTER TABLE Prescribe RENAME TO Prescribe_old;

CREATE TABLE Prescribe (
    PatientID INT NOT NULL,
    DiagnosisID INT NOT NULL, 
    dr_id INT NOT NULL,
    medication_id INT NOT NULL,
    date TIMESTAMP NOT NULL,
    dosage VARCHAR(50) NOT NULL,
    PRIMARY KEY (PatientID),
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (dr_id) REFERENCES Doctors(emp_id),
    FOREIGN KEY (medication_id) REFERENCES Medication(m_id),
    FOREIGN KEY (DiagnosisID) REFERENCES PatientDiagnosis(DiagnosisID)
);

INSERT INTO Prescribe (PatientID, DiagnosisID, dr_id, medication_id, date, dosage)
VALUES
    (1, 11, 1, 1, '2023-01-15', '1 pill twice a day'),
    (2, 12, 2, 2, '2023-02-10', '2 tablets daily'),
    (3, 13, 3, 3, '2023-03-05', '1 capsule before meals'),
    (4, 14, 4, 4, '2023-04-20', '1 teaspoon every 6 hours'),
    (5, 15, 5, 5, '2023-05-12', '1 spray as needed');
    
INSERT INTO Prescribe (PatientID, DiagnosisID, dr_id, medication_id, date, dosage)
VALUES
    (6, 16, 6, 6, '2023-06-30', '1 pill before bedtime'),
    (7, 17, 7, 7, '2023-07-15', '2 tablets with meals'),
    (8, 18, 8, 8, '2023-08-10', '1 capsule twice daily'),
    (9, 19, 9, 9, '2023-09-25', '1 tablet after breakfast'),
    (10, 20, 10, 10, '2023-10-20', '1 spray every 4 hours');

    CREATE ROLE doctor;
GRANT SELECT ON milestone1.patient TO doctor;
GRANT SELECT, INSERT ON milestone1.Prescribe TO doctor;
GRANT SELECT, insert ON milestone1.PatientDiagnosis TO doctor;

Create role nurse;
GRANT SELECT ON milestone1.patient TO nurse;
GRANT SELECT ON milestone1.Prescribe TO nurse;
GRANT SELECT ON milestone1.PatientDiagnosis TO nurse;

CREATE ROLE receptionist;
GRANT SELECT, INSERT ON milestone1.patient TO receptionist;

CREATE USER 'kaif'@'%' IDENTIFIED BY 'kaif1234';

grant doctor to 'kaif'@'%';

show grants for 'kaif'@'%';

SELECT FirstName, LastName, Age 
FROM Patient 
WHERE PatientID = 2;

SELECT PatientID, Diagnosis, DiagnosisDate 
FROM Patientdiagnosis 
WHERE PatientID = 2;

SELECT PatientID, date, dosage
FROM prescribe
WHERE PatientID = 2;

SELECT Patient.PatientID, Prescribe.date, Prescribe.dosage 
FROM Patient 
JOIN Prescribe ON Patient.PatientID = Prescribe.PatientID
WHERE Patient.PatientID = 2
LIMIT 0, 1000;

SELECT PatientID,
    (SELECT cost FROM medication WHERE m_id = 2) + 
    (SELECT cost FROM treatment WHERE code = 3) + 
    (SELECT stay FROM medication WHERE m_id = 2 ) + 600 AS result from patient;
    
SELECT DATEDIFF(end_time, start_time) AS days_difference
FROM stay;
SELECT prescribe.patientID,prescribe.dr_id,patientdiagnosis.DiagnosisID,patientdiagnosis.Diagnosis,medication.name as medication_name,prescribe.dosage
FROM patientdiagnosis
INNER JOIN prescribe ON patientdiagnosis.DiagnosisID = prescribe.DiagnosisID
INNER JOIN medication ON prescribe.medication_id = medication.m_id;

SELECT prescribe.patientID,prescribe.dr_id,patientdiagnosis.DiagnosisID,patientdiagnosis.Diagnosis,medication.name as medication_name,
prescribe.dosage,medication.cost,treatment.cost,DATEDIFF(end_time, start_time) AS days_difference
FROM patientdiagnosis
INNER JOIN prescribe ON patientdiagnosis.DiagnosisID = prescribe.DiagnosisID
INNER JOIN medication ON prescribe.medication_id = medication.m_id
INNER JOIN undergoes_treatment ON undergoes_treatment.PatientID = prescribe.PatientID
INNER JOIN treatment ON treatment.code = undergoes_treatment.T_Code
INNER JOIN stay ON stay.stay_id = undergoes_treatment.stay_id;

CREATE VIEW patient_checkout_view AS
SELECT prescribe.patientID,patient.FirstName,patient.LastName,prescribe.dr_id,patientdiagnosis.DiagnosisID,patientdiagnosis.Diagnosis,medication.name as medication_name,
prescribe.dosage,medication.cost as Medication_cost,treatment.cost as Treatment_cost,DATEDIFF(end_time, start_time) AS days_stayed
FROM patientdiagnosis
INNER JOIN prescribe ON patientdiagnosis.DiagnosisID = prescribe.DiagnosisID
INNER JOIN medication ON prescribe.medication_id = medication.m_id
INNER JOIN undergoes_treatment ON undergoes_treatment.PatientID = prescribe.PatientID
INNER JOIN treatment ON treatment.code = undergoes_treatment.T_Code
INNER JOIN stay ON stay.stay_id = undergoes_treatment.stay_id
INNER JOIN patient ON patient.PatientID = prescribe.PatientID;

select * from patient_checkout_view;
SELECT
    (SELECT Medication_cost FROM patient_checkout_view WHERE PatientID = 3) + 
    (SELECT Treatment_cost FROM patient_checkout_view WHERE  PatientID = 3) + 
    (SELECT days_stayed FROM patient_checkout_view WHERE  PatientID = 3) + 600 AS result from  patient_checkout_view;
select * from patient_checkout_view;
drop view patient_checkout_view;

SELECT *, Medication_cost + Treatment_cost + (days_stayed * 4500 ) + 1000 AS total_cost
FROM patient_checkout_view
WHERE PatientID = 7 ;

SELECT prescribe.patientID,patient.FirstName,patient.LastName,prescribe.dr_id,patientdiagnosis.DiagnosisID,patientdiagnosis.Diagnosis,medication.name as medication_name,
prescribe.dosage,medication.cost as Medication_cost,treatment.cost as Treatment_cost,DATEDIFF(end_time, start_time) AS days_stayed,medication.cost + treatment.cost + (DATEDIFF(end_time, start_time) * 4500 ) + 1000 AS total_cost
FROM patientdiagnosis
INNER JOIN prescribe ON patientdiagnosis.DiagnosisID = prescribe.DiagnosisID
INNER JOIN medication ON prescribe.medication_id = medication.m_id
INNER JOIN undergoes_treatment ON undergoes_treatment.PatientID = prescribe.PatientID
INNER JOIN treatment ON treatment.code = undergoes_treatment.T_Code
INNER JOIN stay ON stay.stay_id = undergoes_treatment.stay_id
INNER JOIN patient ON patient.PatientID = prescribe.PatientID;

CREATE INDEX patientID_index ON patient(patientID);

select * from patient where PatientID = 3;


DELIMITER //

CREATE PROCEDURE caltotal(IN pid INT)
BEGIN
SELECT *, Medication_cost + Treatment_cost + (days_stayed * 4500 ) + 1000 AS total_cost
FROM patient_checkout_view
WHERE PatientID = pid ;
END//

DELIMITER ;

call caltotal(6);

DELIMITER //

CREATE TABLE insurance_expiry_alerts (
    alert_id INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT,
    alert_message VARCHAR(255),
    alert_datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DELIMITER //
CREATE TRIGGER after_medical_insurance_insert
AFTER INSERT ON insurance
FOR EACH ROW
BEGIN
	IF NEW.end_date < CURDATE() THEN
        INSERT INTO insurance_expiry_alerts (patient_id, alert_message, alert_datetime)
        VALUES (NEW.id, 'Medical insurance limit has expired', NOW());
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER after_medical_insurance_update
AFTER UPDATE ON insurance
FOR EACH ROW
BEGIN
    IF NEW.end_date < CURDATE() THEN
        INSERT INTO insurance_expiry_alerts (patient_id, alert_message, alert_datetime)
        VALUES (NEW.id, 'Medical insurance limit has expired', NOW());
    END IF;
END//
DELIMITER ;


DELIMITER //
CREATE TRIGGER after_medical_insurance_delete
AFTER DELETE ON insurance
FOR EACH ROW
BEGIN
    IF OLD.end_date < CURDATE() THEN
        INSERT INTO insurance_expiry_alerts (patient_id, alert_message, alert_datetime)
        VALUES (OLD.id, 'Medical insurance limit has expired', NOW());
    END IF;
END//
DELIMITER ;

INSERT INTO insurance (id, limit1, start_date, end_date, provider)
VALUES
    (11, 50000.00, '2023-01-01', '2024-01-01', 'ABC Insurance Company');


select * from insurance_expiry_alerts;
















